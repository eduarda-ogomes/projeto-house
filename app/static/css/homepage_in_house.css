/*
 * Arquivo: homepage_in_house.css
 * Este CSS é para o conteúdo principal da página
 * quando o usuário JÁ está em uma casa,
 * e foi projetado para coexistir com o menu lateral.
 */

/* Garante que o body use todo o espaço e permita flexbox */
body {
    display: flex; /* Permite que o menu lateral e o conteúdo principal fiquem lado a lado */
    min-height: 100vh; /* Garante que o body ocupe a altura total da viewport */
    margin: 0; /* Remove margem padrão do body */
    font-family: 'Noto Sans', sans-serif; /* Usando a fonte importada */
    background-color: #f4f4f4; /* Fundo geral da página */
}

/* Estilos para o CONTEÚDO PRINCIPAL (a tag <main>) */
.homepage { /* Aplica-se a <main class="homepage"> */
    flex-grow: 1; /* Faz com que o conteúdo principal ocupe todo o espaço restante horizontalmente */
    padding: 20px; /* Espaçamento interno padrão para o conteúdo */
    /* Remove o margin-left fixo, ele será gerenciado pelo JS na classe .expandir */
    transition: margin-left .5s ease; /* Transição suave para quando o menu expandir/recolher */
    box-sizing: border-box; /* Garante que padding não adicione largura extra */
}

/* Quando o menu está "recolhido", o conteúdo principal tem este margin-left */
.homepage {
    margin-left: 75px; /* Espaço para o menu lateral recolhido (75px de largura do menu) */
}

/* Quando o menu está "expandido" (adiciona a classe 'expandir' ao body ou a um container pai) */
/* Se o seu JS adiciona 'expandir' ao nav.menu_lateral, você precisa de uma regra específica */
/* Exemplo se o body.expandir ou um wrapper.expandir fosse usado:
   body.expandir .homepage {
       margin-left: 250px;
   }
*/

/* CORREÇÃO IMPORTANTE: Para que o menu_lateral.expandir afete o homepage,
   precisamos que o JavaScript adicione a classe 'expandir' a um ancestral comum,
   como o <body>, ou que o seletor CSS seja mais inteligente.
   Se o JS apenas adiciona 'expandir' ao 'nav.menu_lateral', então o CSS do homepage
   precisa saber disso. A maneira mais simples é ter um JavaScript que altera o margin do homepage
   ou adiciona uma classe ao <body>.

   ASSUMINDO: Que o JavaScript (menu.js) adiciona/remove 'expandir' na tag `nav.menu_lateral`.
   Nesse caso, a forma mais robusta é ajustar o `margin-left` do `.homepage`
   com base no estado do menu, usando o JavaScript, ou ter o JavaScript
   adicionar uma classe a um elemento pai (como o `body`).

   Se você *não* quer mudar o JS, podemos ajustar o CSS:
   Como o .menu_lateral é 'fixed', ele não afeta o fluxo do documento.
   O margin-left do .homepage sempre deve ser a largura atual do menu.
   O JS precisa manipular a largura do menu E o margin-left do .homepage.
   Ou usamos Flexbox no body e ajustamos a largura do menu.
*/

/* ******************************************************************* */
/* REVISÃO MAIS ROBUSTA COM BASE NO SEU JS:                           */
/* O seu JS manipula APENAS `nav.menu_lateral.expandir`.             */
/* Para o `.homepage` se mover, você precisa de JS para manipular o `margin-left` dele. */
/* OU mudar a estrutura CSS/HTML para Flexbox no body.               */
/* ******************************************************************* */

/* Opção 1: Ajuste via JavaScript (mais controle, mas mais trabalho)
   No seu menu.js, quando o menu_side.classList.toggle('expandir') é chamado,
   você também precisaria:
   var main_content = document.querySelector('.homepage');
   if (menu_side.classList.contains('expandir')) {
       main_content.style.marginLeft = '250px'; // Largura expandida do menu
   } else {
       main_content.style.marginLeft = '75px';  // Largura recolhida do menu
   }
*/

/* Opção 2 (Melhor sem mudar o JS): Usar variáveis CSS e calc() */
/* Isso é mais avançado, mas ideal se o JS só muda a classe do menu */
/* E o body precisa ser o container flexbox */

:root {
    --menu-recolhido-width: 75px;
    --menu-expandido-width: 250px;
}

body {
    display: flex; /* Importante para o layout lado a lado */
    min-height: 100vh;
    margin: 0;
    font-family: 'Noto Sans', sans-serif;
    background-color: #f4f4f4;
}

nav.menu_lateral {
    width: var(--menu-recolhido-width); /* Inicia recolhido */
    height: 100%;
    background-color: #201b2c;
    padding: 40px 0 40px 1%;
    box-shadow: 3px 0 0 #2f2841;
    position: fixed; /* Fixa o menu */
    top: 0;
    left: 0;
    overflow: hidden;
    transition: width .5s ease, padding .5s ease; /* Transição para a largura */
    z-index: 1000; /* Garante que o menu esteja acima de outros conteúdos */
}

/* Quando o menu expande, o JS adiciona 'expandir' a nav.menu_lateral */
nav.menu_lateral.expandir {
    width: var(--menu-expandido-width); /* Expande a largura */
}

/* O conteúdo principal precisa ter um margin-left que acompanha o menu */
/* Podemos fazer isso com CSS, se o body for o container flexbox principal,
   mas o 'fixed' do menu lateral tira ele do fluxo normal do documento.
   Portanto, o 'margin-left' no homepage é a abordagem mais direta.
*/

.homepage {
    flex-grow: 1;
    padding: 20px;
    box-sizing: border-box;
    background-color: #f4f4f4; /* Cor de fundo específica do conteúdo */
    /* Este margin-left é o padrão quando o menu está recolhido */
    margin-left: var(--menu-recolhido-width);
    transition: margin-left .5s ease; /* Transição para o margin */
}

body {
    display: flex; /* Essencial para o layout lado a lado */
    min-height: 100vh;
    margin: 0;
    font-family: 'Noto Sans', sans-serif;
    background-color: #f4f4f4;
}

/* Estilos do menu lateral (como você já tem, pode estar em menu.css) */
nav.menu_lateral {
    width: 75px; /* Largura padrão recolhida */
    height: 100%;
    background-color: #201b2c;
    padding: 40px 0 40px 1%;
    box-shadow: 3px 0 0 #2f2841;
    position: fixed; /* Fixa o menu */
    top: 0;
    left: 0;
    overflow: hidden;
    transition: width .5s ease, padding .5s ease;
    z-index: 1000; /* Garante que o menu esteja acima */
}

nav.menu_lateral.expandir {
    width: 250px; /* Largura quando expandido */
}

/* Estilos para o CONTEÚDO PRINCIPAL */
main.homepage {
    flex-grow: 1; /* Ocupa o espaço restante */
    padding: 20px;
    box-sizing: border-box;
    background-color: #f4f4f4;
    /* Margem inicial para quando o menu está recolhido */
    margin-left: 75px;
    transition: margin-left .5s ease; /* Transição suave para o margin */
}

/* Quando o menu está expandido, a classe 'menu-expandido' é adicionada ao body pelo JS */
body.menu-expandido main.homepage {
    margin-left: 250px; /* Ajusta a margem para a largura expandida do menu */
}

/* --- O resto do seu CSS para .container, h1, button, etc. (mantido) --- */

.container {
    max-width: 700px;
    margin: 40px auto;
    background: white;
    padding: 30px;
    border-radius: 12px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
}

h1 {
    color: #4CAF50;
    margin-bottom: 1rem;
}

.option {
    margin-top: 20px;
}

button {
    display: block;
    width: 100%;
    padding: 16px;
    margin: 12px 0;
    font-size: 1.1rem;
    font-weight: 600;
    background-color: #7c3aed;
    border: none;
    border-radius: 8px;
    color: white;
    cursor: pointer;
    transition: background-color 0.3s ease;
    text-align: center;
    text-decoration: none;
}

button:hover, a.button:hover {
    background-color: #5a27a8;
}

a.button {
    display: block;
}

@media (max-width: 768px) {
  /* Muda o container para quase largura total e reduz margens */
  main.homepage .container {
    max-width: 95%;
    margin: 20px auto;
    padding: 20px;
    border-radius: 8px;   /* Bordas um pouco menores */
  }

  /* Reduz tamanho da fonte do título */
  main.homepage h1 {
    font-size: 2rem;
  }

  /* Ajusta tamanho do texto e botões */
  main.homepage p {
    font-size: 1rem;
    margin-bottom: 20px;
  }

  main.homepage button {
    font-size: 1rem;
    padding: 14px;
  }

  main.homepage input[type="text"] {
    max-width: 100%;    /* Ocupa toda a largura disponível */
    font-size: 1rem;
  }
}